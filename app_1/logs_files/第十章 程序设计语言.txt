程序设计语言
您现在的位置：希赛网 > 云阅读 > 软件设计师考试试题分类精解（2018版） > 试题1(2017年下半年试题20)
第 10 章：程序设计语言作者：希赛软考学院    来源：希赛软考学院    2017年11月21日
试题1(2017年下半年试题20)
更适合用来开发操作系统的编程语言是（  ）。
（20）A．C/C++
B.Java
C.Python
D.JavaScript
试题分析
现行操作系统均由C/C++开发。
试题答案
（20）A

试题2(2017年下半年试题21)
以下关于程序设计语言的叙述中，不正确的是（  ）。
（21）A．脚本语言中不使用变量和函数
B.标记语言常用于描述格式化和链接
C.脚本语言采用解释方式实现
D.编译型语言的执行效率更高
试题分析
脚本语言中使用变量和函数来完成程序。
试题答案
（21）A

试题3(2017年下半年试题22)
将高级语言源程序通过编译或解释方式进行翻译时，可以先生成与源程序等价的某种中间代码。以下关于中间代码的叙述中，正确的是（  ）。
（22）A．中间代码常采用符号表来表示
B.后缀式和三地址码是常用的中间代码
C.对中间代码进行优化要依据运行程序的机器特性
D.中间代码不能跨平台
试题分析
B只是类似于三地址码， CD与具体的机器无关。
试题答案
（22）A

试题4(2017年下半年试题48)
编译过程中进行的语法分析主要是分析（  ）。
（48）A．源程序中的标识符是否合法
B.程序语句的含义是否合法
C.程序语句的结构是否合法
D.表达式的类型是否合法
试题分析
语法分析主要是分析数据类型是否合法。
试题答案
（48）D

试题5(2017年下半年试题49)
某确定的有限自动机（DFA）的状态转换图如下图所示（0是初态，4是终态），则该DFA能识别（  ）。
 
（49）A．aaab
B.abab
C.bbba
D.abba
试题分析
B项从0到1然后走不了了，C项在3状态结束，不对；D项也只到1状态。
试题答案
（49）A

试题6(2017年下半年试题50)
函数main()、f()的定义如下所示。调用函数f()时，第一个参数采用传值（call by value）方式，第二个参数采用传引用（call by reference）方式，则函数main()执行后输出的值为（  ）。
 
（50）A．10
B.19
C.20
D.29
试题分析
x = 2*10-1=19；a=a+x=10+19=29；a是引用传递，所以结果为29。
试题答案
（50）D

试题7(2017年上半年试题20)
在高级语言源程序中，常需要用户定义的标识符为程序中的对象命名，常见的命名对象有（  ）
①关键字（或保留字）②变量③函数④数据类型⑤注释

（20）A．①②③
B.②③④
C.①③⑤
D.②④⑤
试题分析
关键字和注释不能作为标识符给对象命名。
试题答案
（20）B

试题8(2017年上半年试题21)
在仅由字符a、b构成的所有字符串中，其中以b结尾的字符串集合可用正规式表示为（  ）。

（21）A．(b|ab)*b
B.(ab*)*b
C.a*b*b
D.(a|b)*b
试题分析
正规式(a|b)*对应的正规集为{ε，a，b，aa，ab，…，所有由a和b组成的字符串}，结尾为b。
试题答案
（21）D

试题9(2017年上半年试题22)
在以阶段划分的编译过程中，判断程序语句的形式是否正确属于（  ）阶段的工作。

（22）A．词法分析
B.语法分析
C.语义分析
D.代码生成
试题分析
检查单个词是否正确，属于词法阶段的工作。而识别判断程序语句形式是否正确属于语法分析的工作。
试题答案
（22）B

试题10(2017年上半年试题48)
某确定的有限自动机 (DFA) 的状态转换图如下图所示 (A 是初态，D、E 是终态)，则该 DFA 能识别（  ）。
 
（48）A．00110
B.10101
C.11100
D.11001
试题分析
选项中，只有C选项的字符串能被DFA解析。解析路径为：ACEEBDD。
试题答案
（48）C

试题11(2017年上半年试题49)
函数main()、f()的定义如下所示，调用函数们f()时，第一个参数采用传值 (call by value) 方式，第二个参数采用传引用 (call by reference) 方式， main() 函数中 "print(x)" 执行后输出的值为（  ）。
 
（49）A．11
B.40
C.45
D.70
试题分析
当值传递的时候，将原来的参数复制了一份，但是引用传递的时候是将变量本身传了出去，因此，a代表的其实就是x本身，f函数里面的x是另一个变量，只有a的变化才能导致main函数里面的x值的变化。
试题答案
（49）B

试题12(2017年上半年试题50)
下图为一个表达式的语法树，该表达式的后缀形式为（  ）。
 
（50）A． x 5 y +* a / b -
B. x 5 y a b*+ /-
C. -/ *+ x 5 y a b
D. x 5+* y+ a/b-
试题分析
要得到题目中的表达式语法树后缀形式，只需要对树进行后序遍历即可，后序遍历的结果为：x5y+*a/b-。
试题答案
（50）A

试题13(2017年上半年试题57)
以下关于字符串的叙述中，正确的是（  ）。

（57）A．包含任意个空格字符的字符串称为空串
B. 字符串不是线性数据结构
C. 字符串的长度是指串中所含字符的个数
D. 字符串的长度是指串中所含非空格字符的个数
试题分析
空格也是一个字符，所以包含空格的字符串不能称为空串，所以字符串的长度是指字符串所有字符个数的总和（包括空格）；字符串是线性结构。
试题答案
（57）C

试题14(2016年下半年试题21)
常用的函数参数传递方式有传值与传引用两种。（  ）。

（21）A．在传值方式下，形参与实参之间互相传值
B.在传值方式下，实参不能是变量
C.在传引用方式下，修改形参实质上改变了实参的值。
D.在传引用方式下，实参可以是任意的变量和表达式。
试题分析
传值调用最显著的特征就是被调用的函数内部对形参的修改不影响实参的值。引用调用是将实参的地址传递给形参，使得形参的地址就是实参的地址。
试题答案
（21）C

试题15(2016年下半年试题48)
由字符a、b构成的字符串中，若每个a后至少跟一个b，则该字符串集合可用正规式表示为（  ）。
（48）A．（b|ab）*
B.（ab*）*
C.（a*b*）*
D.（a|b）*
试题分析
A的方式可以保证a后面必定是b
试题答案
（48）A

试题16(2016年下半年试题49)
乔姆斯基（Chomsky）将文法分为4种类型，程序设计语言的大多数语法现象可用其中的（  ）描述。
（49）A．上下文有关文法
B.上下文无关文法
C.正规文法
D.短语结构文法
试题分析
上下文无关文法：形式语言理论中一种重要的变换文法，用来描述上下文无关语言，在乔姆斯基分层中称为2型文法。由于程序设计语言的语法基本上都是上下文无关文法，因此应用十分广泛。
试题答案
（49）B

试题17(2016年下半年试题50)
运行下面的C程序代码段，会出现（  ）错误。
    int k=0;
    for(;k<100;);
    {k++;}（50）A．变量未定义
B.静态语义
C.语法
D.动态语义
试题分析
在本题中，for语句后有“;”号，说明该循环语句的语句体为空，此时，循环会是一个死循环，所以存在语义错误。
试题答案
（50）D

试题18(2016年上半年试题20)
以下关于高级程序设计语言实现的编译和解释方式的叙述中，正确的是（  ）。
（20）A．编译程序不参与用户程序的运行控制，而解释程序则参与 
B.编译程序可以用高级语言编写，而解释程序只能用汇编语言编写 
C.编译方式处理源程序时不进行优化，而解释方式则进行优化 
D.编译方式不生成源程序的目标程序，而解释方式则生成
试题分析
编译程序的功能是把用高级语言书写的源程序翻译成与之等价的目标程序。编译过程划分成词法分析、语法分析、语义分析、中间代码生成、代码优化和目标代码生成6个阶段。目标程序可以独立于源程序运行。
解释程序是一种语言处理程序，在词法、语法和语义分析方面与编译程序的工作原理基本相同，但在运行用户程序时，它是直接执行源程序或源程序的内部形式(中间代码)。因此，解释程序并不产生目标程序，这是它和编译程序的主要区别。
试题答案
（20）A

试题19(2016年上半年试题21)
以下关于脚本语言的叙述中，正确的是（  ）。
（21）A．脚本语言是通用的程序设计语言 
B.脚本语言更适合应用在系统级程序开发中 
C.脚本语言主要采用解释方式实现 
D.脚本语言中不能定义函数和调用函数
试题分析
脚本语言（Script languages,scripting programming languages,scripting languages）是为了缩短传统的编写-编译-链接-运行（edit-compile-link-run）过程而创建的计算机编程语言。此命名起源于一个脚本“screenplay”，每次运行都会使对话框逐字重复。早期的脚本语言经常被称为批处理语言或工作控制语言。一个脚本通常是解释运行而非编译。
试题答案
（21）C

试题20(2016年上半年试题22)
将高级语言源程序先转化为一种中间代码是现代编译器的常见处理方式。常用的中间代码有后缀式、（  ）、树等。
（22）A．前缀码 
B.三地址码 
C.符号表 
D.补码和移码
试题分析
中间代码的表达形式有语法树，后缀式，三地址代码。
试题答案
（22）B

试题21(2016年上半年试题48)
移进--归约分析法是编译程序（或解释程序）对高级语言源程序进行语法分析的一种方法，属于（  ）的语法分析方法。
（48）A．自顶向下（或自上而下） 
B.自底向上（或自下而上） 
C.自左向右 
D.自右向左
试题分析
归约分析是自底向下方法中的典型。
试题答案
（48）B

试题22(2016年上半年试题49)
某确定的有限自动机（DFA）的状态转换图如下图所示（A是初态，C是终态），则该DFA能识别（  ）。
 
（49）A．aabb 
B.abab 
C.baba 
D.abba
试题分析
选项中的abab能被解释，其顺序参看图中的序号。
 
试题答案
（49）B

试题23(2016年上半年试题50)
函数main()、f()的定义如下所示，调用函数f()时，第一个参数采用传值（call by value）方式，第二个参数采用传引用（call by reference）方式，main函数中“print(x)”执行后输出的值为（  ）。

 
（50）A．1 
B.6 
C.11 
D.12
试题分析
本题考查传址与传值的相关知识，可以使用手动执行程序的方式来进行。在主函数中，调用f(5,x)之后：
f()函数中的x=5，a=1。
x=2*x+1，则x=11。
a=a+x，则a=12。由于a是以传址的方式传入的参数，所以主函数中的x与其值相同，也为12。打印结果应为12。
试题答案
（50）D

试题24(2015年下半年试题20-21)
编译器和解释器是两种基本的高级语言处理程序。编译器对高级语言源程序的处理过程可以划分为词法分析、语法分析、语义分析、中间代码生成、代码优化、目标代码生成等阶段，其中，（  ）并不是每个编译器都必需的，与编译器相比，解释器（  ）。
 
（20）A．词法分析和语法分析 
B.语义分析和中间代码生成 
C.中间代码生成和代码优化 
D.代码优化和目标代码生成 

（21）A．不参与运行控制，程序执行的速度慢 
B.参与运行控制，程序执行的速度慢 
C.参与运行控制，程序执行的速度快 
D.不参与运行控制，程序执行的速度快
试题分析
在编译过程中：词法分析；语法分析；语义分析；目标代码生成是必须的。
试题答案
（20）C（21）B

试题25(2015年下半年试题22)
表达式采用逆波兰式表示时，利用（  ）进行求值。
（22）A．栈 
B.队列 
C.符号表 
D.散列表
试题分析
逆波兰使用栈的基本操作流程为：从左至右将数字入栈，当遇运算符时，出栈运算符所需数据进行操作，再将操作结果入栈，依此类推。
试题答案
（22）A

试题26(2015年下半年试题48)
某程序运行时陷入死循环，则可能的原因是程序中存在（  ）。
（48）A．词法错误 
B.语法错误 
C.动态的语义错误 
D.静态的语义错误
试题分析
死循环错误属于典型的语义错误，但静态的语义错误可被编译器发现，到程序真正陷入死循环说明编译器并未发现，所以属于动态语义错误。
试题答案
（48）C

试题27(2015年下半年试题49)
某非确定的有限自动机（NFA）的状态转换图如下图所示（q0既是初态也是终态）。以下关于该NFA的叙述中，正确的是（  ）。

 
（49）A．其可识别的0、1序列的长度为偶数 
B.其可识别的0、1序列中0与1的个数相同 
C.其可识别的非空0、1序列中开头和结尾字符都是0 
D.其可识别的非空0、1序列中结尾字符是1
试题分析
要证明一种说法有误只需要举一反例即可，所以做这类题时，举反例排除错误选择是一个不错的选择。
由于题目所述的NFA可以解析串“1”，所以可排除：A，B，C三个选项。
试题答案
（49）D

试题28(2015年下半年试题50)
函数t()、f()的定义如下所示，若调用函数t时传递给x的值为5，并且调用函数F()时，第一个参数采用传值（call by value）方式，第二个参数采用传引用（call by reference）方式，则函数t的返回值为（  ）。
 
（50）A．33 
B.22 
C.11 
D.负数
试题分析
当程序执行到函数t中，调用f(x,a)时，x=5,a=16。
当程序在f(x,a)中执行完成之后，对r的值的改变，并不会影响实参值，但对s的修改会改变调用的实参值，在f(x,a)中执行完成之后s的值变为38，所以对应实参值a也是38。最后返回值是：a-x,即38-5=33。
试题答案
（50）A

试题29(2015年上半年试题20)
以下关于程序设计语言的叙述中，错误的是（  ）。
（20）A．程序设计语言的基本成分包括数据、运算、控制和传输等
B.高级程序设计语言不依赖于具体的机器硬件
C.程序中局部变量的值在运行时不能改变
D.程序中常量的值在运行时不能改变
试题分析
本题考查程序语言基础知识。
选项 A 涉及程序语言的一般概念，程序设计语言的基本成分包括数据、运算、控制和传输等。
选项 B 考查高级语言和低级语言的概念。对于程序设计语言，高级语言和低级语言是指其相对于运行程序的机器的抽象程度。低级语言在形式上更接近机器指令，汇编语言就是与机器指令一一对应的。高级语言对底层操作进行了抽象和封装，其一条语句对应多条机器指令，使编写程序的过程更符合人类的思维习惯，井且极大简化了人力劳动。 高级语言不依赖于具体的机器硬件。
选项 C 考查局部变量的概念，凡是在函数内部定义的变量都是局部变量(也称作内部变量)，包括在函数内部复合语句中定义的变量和函数形参表中说明的形式参数 。局部 变量只能在函数内部使用，其作用域是从定义位置起至函数体或复合语句体结束为止。 局部变量的值通常在其生存期内是变化的。
选项D考查常量的概念，程序中常量的值在运行时是不能改变的。
试题答案
（20）C

试题30(2015年上半年试题21)
与算术表达式“（a+（b-c））*d”对应的树是（  ）。
（21）A． 
B. 
C. 
D. 
试题分析
本题考查程序语言与数据结构基础知识。对算术表达式" (a+(b-c))*d"求值的运算处理顺序是：先进行b-c， 然后与 a 相加，最后再与 d 相乘。只有选项 B 所示的二叉树与其相符。
试题答案
（21）B

试题31(2015年上半年试题22)
C程序中全局变量的存储空间在（  ）分配。
（22）A．代码区 
B.静态数据区 
C.栈区 
D.堆区
试题分析
全局变量、静态局部变量、静态全局变量都存放在静态数据存储区。
试题答案
（22）B

试题32(2015年上半年试题48)
对高级语言源程序进行编译或解释的过程可以分为多个阶段，解释方式不包含（  ）阶段。
（48）A．词法分析
B.语法分析
C.语义分析
D.目标代码生成
试题分析
本题考查程序语言基础知识。
用某种高级语言或汇编语言编写的程序称为源程序，源程序不能直接在计算机上执行。汇编语言源程序需要用一个汇编程序将其翻译成目标程序后才能执行。高级语言源 程序则需要对应的解释程序或编译程序对其进行翻译，然后在机器上运行。
解释程序也称为解释器，它或者直接解释执行源程序，或者将源程序翻译成某种中间代码后再加以执行:而编译程序(编译器)则是将源程序翻译成目标语言程序，然后在计算机上运行目标程序。这两种语言处理程序的根本区别是：在编译方式下，机器上 运行的是与源程序等价的目标程序，源程序和编译程序都不再参与目标程序的执行过程：而在解释方式下，解释程序和源程序(或其某种等价表示)要参与到程序的运行过程中， 运行程序的控制权在解释程序。简单来说，在解释方式下，翻译源程序时不生成独立的目标程序，而编译器则将源程序翻译成独立保存的目标程序。
试题答案
（48）D

试题33(2015年上半年试题49)
某非确定的有限自动机(NFA)的状态转换图如下图所示（q0既是初态也是终态），与该NFA等价的确定的有限自动机(DFA)是（  ）。
 
（49）A．  
B.  
C.  
D. 
试题分析
本题使用代入法进行验证比较容易。
（1）代入aaa，选项B与C无法解析，故排除。
（2）代入ba，选项D无法解析，也要排除，此时可以确定正确答案为A。
试题答案
（49）A

试题34(2015年上半年试题50)
递归下降分析方法是一种（  ）方法。
（50）A．自底向上的语法分析 
B.自上而下的语法分析 
C.自底向上的词法分析 
D.自上而下的词法分析
试题分析
所谓递归下降法 (recursive descent method)，是指对文法的每一非终结符号，都根据相应产生式各候选式的结构，为其编写一个子程序 (或函数)，用来识别该非终结符号所表示的语法范畴。
试题答案
（50）B

试题35(2014年下半年试题18)
属于面向对象、解释型程序设计语言的是（  ）。
（18）A．XML
B.Python
C.Prolog
D.C
试题分析
C++：是在C语言的基础上发展起来的，主要增加了类的功能，使其成为面向对象的程序设计语言。
Prolog：是以特殊的逻辑推理形式回答用户的查询，它建立在关系理论和一阶谓词理论基础上。经常用于数据库和专家系统。
Python：是一种面向对象、解释型计算机程序设计语言，由Guido van Rossum于1989年底发明，第一个公开发行版发行于1991年。Python语法简洁而清晰，具有丰富和强大的类库。它常被昵称为胶水语言，它能够把用其他语言制作的各种模块（尤其是C/C++）很轻松地联结在一起。
试题答案
（18）B

试题36(2014年下半年试题21)
算术表达式“(a-b)*(c+d)”的后缀式是（  ）。 
（21）A．ab-cd+ *
B.abcd-*+
C.ab-+*cd
D.ab-c+d*
试题分析
后缀表达式是从左到右算。把表达式加上括号，((a-b)*(c+d))，再把运算符加到括号外面ab-cd+*。答案为A。
试题答案
（21）A

试题37(2014年下半年试题22)
将高级语言源程序翻译成机器语言程序的过程中，常引入中间代码。以下关于中间代码的叙述中，不正确的是（  ）。  
（22）A．中间代码不依赖于具体的机器．
B.使用中间代码可提高编译程序的可移植性
C.中间代码可以用树或图表示
D.中间代码可以用栈和队列表示
试题分析
本题考查程序语言基础知识。
从原理上讲，对源程序进行语义分析之后就可以直接生成目标代码，但由于源程序与目标代码的逻辑结构往往差别很大，特别是考虑到具体机器指令系统的特点，要使翻译一次到位很困难，而且用语法制导方式机械生成的目标代码往往是繁琐和低效的，因此有必要设计一种中间代码，将源程序首先翻译成中间代码表示形式，以利于进行与机器无关的优化处理。由于中间代码实际上也起着编译器前端和后端分水岭的作用，所以使用中间代码也有助于提高编译程序的可移植性。常用的中间代码有后缀式、三元式、 四元式和树(图)等形式。
试题答案
（22）D

试题38(2014年下半年试题48)
对高级语言源程序进行编译的过程可以分为多个阶段，分配寄存器的工作在（  ）阶段进行。
（48）A．词法分析
B.语法分析
C.语义分析
D.目标代码生成
试题分析
目标代码生成阶段应考虑直接影响到目标代码速度的三个问题：一是如何生成较短的目标代码；二是如何充分利用计算机中的寄存器，减少目标代码访问存储单元的次数；三是如何充分利用计算机指令系统的特点，以提高目标代码的质量。
试题答案
（48）D

试题39(2014年下半年试题49)
以下关于下图所示有限自动机的叙述中，不正确的是（  ）。
 
（49）A．该自动机识别的字符串中a不能连续出现
B.自动机识别的字符串冲b不能连续出现
C.该自动机识别的非空字符串必须以a结尾
D.该自动机识别的字符串可以为空串
试题分析
从图中可以看出a能连续出现。
试题答案
（49）A

试题40(2014年下半年试题50)
对于大多数通用程序设计语言，用（  ）描述其语法即可。
（50）A．正规文法
B.上下文无关文法
C.上下文有关文法
D.短语结构文法
试题分析
上下文无关文法：形式语言理论中一种重要的变换文法，用来描述上下文无关语言，在乔姆斯基分层中称为2型文法。由于程序设计语言的语法基本上都是上下文无关文法，因此应用十分广泛。
试题答案
（50）B

试题41(2014年上半年试题20)
以下程序设计语言中，（  ）更适合用来进行动态网页处理。
（20）A．HTML
B.LISP
C.PHP
D.JAVA/C++
试题分析
HTML：静态网页
LISP：一种基于λ演算的函数式编程语言
PHP ：混合了C、Java、Perl以及PHP自创的语法。它可以比CGI或者Perl更快速地执行动态网页。
试题答案
（20）C

试题42(2014年上半年试题21)
引用调用方式下进行函数调用，是将（  ）。
（21）A．实参的值传递给形参
B.实参的地址传递给形参
C.形参的值传递给实参
D.形参的地址传递给实参
试题分析
引用调用是函数传递参数的一种方式，使用引用调用，可以在子函数中对形参所做的更改对主函数中的实参有效。
引用可以看成是一种特殊类型的变量可以被认为是另一个变量的别名，就好比人的绰号一样，虽然名字不同，
但所指向的人是一样的，所以引用还与指针有类似的地方。
试题答案
（21）B

试题43(2014年上半年试题22)
编译程序对高级语言源程序进行编译的过程中，要不断收集、记录和使用源程序中一些相关符号的类型和特征等信息，并将其存入（  ）中。
（22）A．符号表
B.哈希表
C.动态查找表
D.栈和队列
试题分析
符号表：符号表是一种用于语言翻译器（例如编译器和解释器）中的数据结构。在符号表中，程序源代码中的每个标识符都和它的声明或使用信息绑定在一起，比如其数据类型、作用域以及内存地址。 
哈希表：也叫散列表，是根据关键码值(Key value)而直接进行访问的数据结构。也就是说，它通过把关键码值映射到表中一个位置来访问记录，以加快查找的速度。
动态查找表：动态查找表的表结构本身是在查找过程中动态生成的，即对于给定值key,若表中存在其关键字等于key的记录，则查找成功返回，否则插入关键字等于key的记录。 
栈和队列：基本的数据结构。栈的基本特点是“后进先出”，而队列的基本特点是“先进先出”。
试题答案
（22）A

试题44(2014年上半年试题48)
以下关于实现局级程序设计语言的编译和解释方式的叙述中，正确的是（  ）。
（48）A．在编译方式下产生源程序的目标程序，在解释方式下不产生 
B.在解释方式下产生源程序的目标程序，在编译方式下不产生 
C.编译和解释方式都产生源程序的目标程序，差别是优化效率不同 
D.编译和解释方式都不产生源程序的目标程序，差别在是否优化
试题分析
编译程序的功能就是把高级语言书写的源程序翻译成与之等价的目标程序（汇编语言或机器语言）。
解释程序是另一种语言处理程序，在词法、语法和语义分析方面与编译程序的工作原理基本相同，但在运行时直接执行源程序或源程序的内部形式，即解释程序不产生源程序的目标程序，这点是它与编译程序的主要区别。
试题答案
（48）A

试题45(2014年上半年试题49)
大多数程序设计语言的语法规则用（  ）描述即可。
（49）A．正规文法 
B.上下文无关文法 
C.上下文有关文法 
D.短语结构文法
试题分析
上下文无关文法重要的原因在于它们拥有足够强的表达力来表示大多数程序设计语言的语法；实际上，几乎所有程序设计语言都是通过上下文无关文法来定义的。另一方面，上下文无关文法又足够简单，使得我们可以构造有效的分析算法来检验一个给定字串是否是由某个上下文无关文法产生的。
试题答案
（49）B

试题46(2014年上半年试题50)
在C/C++程序中，整型变量a的值为0且应用在表达式“c=b/a”中，则最可能发生的情形是（  ）。
（50）A．编译时报告有语法错误 
B.编译时报告有逻辑错误 
C.运行时报告有语法错误 
D.运行时产生异常
试题分析
检查语法错误是在编译时，表达式“c=b/a”符合语法逻辑，编译时不会报语法错误；由于编译时a的值无法确定，需要到运行时，实际传入值时才能确定，因此在运行时，若分母为0，将产生异常。
试题答案
（50）D

试题47(2013年下半年试题20)
 程序运行过程中常使用参数在函数（过程）间传递消息，引用调用传递的是实参的（  ）。
（20）A．地址 
B.类型 
C.名称 
D.值
试题分析
程序运行时，对函数的调用一般有两种形式：传值调用和引用调用。
传值调用：形参取的是实参的值，形参的改变不会导致调用点所传的实参的值发生改变。
引用（传址）调用：形参取的是实参的地址，即相当于实参存储单元的地址引用，因此其值的改变同时就改变了实参的值。
试题答案
（20）A

试题48(2013年下半年试题21)
已知文法G:S->A0|B1,A->S1|1,B->S0|0,其中S是开始符号。从S出发可以推导出（  ）。
（21）A．所有由0构成的字符串 
B.所有由1构成的字符串 
C.某些0和1个数相等的字符串 
D.所有0和1个数不同的字符串
试题分析
对于文法可推导出的字符串分析，考试一般可对文法举例，然后总结规律。
以本题文法为例，可以产生的字符串包括：
（1）10
推导过程：S->A0；A->1。
（2）01
推导过程：S-> B1；B->0。
（3）1010
推导过程：S->A0；A->S1：S->A0,A->1。
至此，可以了解到，选项A、B、D的描述都是不正确的。
试题答案
（21）C

试题49(2013年下半年试题22)
算术表达式a+（b-c）*d的后缀式是（  ）（-、+、*表示算术的减、加、乘运算，运算符的优先级和结合性遵循惯例）。
（22）A．bc-d*a+ 
B.abc-d*+ 
C.ab+c-d* 
D.abcd-*+
试题分析
本题要求算术表达式的后缀式，解决该类问题的方法是将算术表达式构造成一棵二叉树，然后对二叉树进行后序遍历，得到后缀式。题目中算术表达式可以构造为以下二叉树：
 
对该二叉树进行后序遍历结果为：a b c - d * +。
试题答案
（22）B

试题50(2013年下半年试题48)
将高级语言程序翻译为机器语言程序的过程中，常引入中间代码，其好处是（  ）。
（48）A．有利于进行反编译处理 
B.有利于进行与机器无关的优化处理 
C.尽早发现语法错误 
D.可以简化语法和语义分析
试题分析
中间代码是源程序的一种内部表示，或称中间语言。中间代码的作用是可使编译程序的结构在逻辑上更为简单明确，特别是可使目标代码的优化比较容易实现中间代码，即为中间语言程序，中间语言的复杂性介于源程序语言和机器语言之间。中间语言有多种形式，常见的有逆波兰记号、四元式、三元式和树。
试题答案
（48）B

试题51(2013年下半年试题49)
对高级语言源程序进行编译的过程中，有穷自动机（NFA或DFA）是进行（  ）的适当工具。
（49）A．词法分析 
B.语法分析 
C.语义分析 
D.出错处理
试题分析
编译程序的功能是从源代码（通常为高级语言）到能直接被计算机或虚拟机执行的目标代码（汇编语言或机器语言）的翻译过程。工作过程分为6个阶段：词法分析、语法分析、语义分析、中间代码生成、代码优化、目标代码生成。
各个阶段逻辑上可以分为前端和后端。前端主要负责解析输入的源代码，由语法分析器和语意分析器协同工作。语法分析器负责把源代码中的‘单词’找出来，语意分析器把这些分散的单词按预先定义好的语法组装成有意义的表达式、语句、函数等等。前端还负责语义的检查，例如检测参与运算的变量是否是同一类型的，简单的错误处理。最终的结果常常是一个抽象的语法树，这样后端可以在此基础上进一步优化处理。
后端编译器后端主要负责分析，优化中间代码以及生成机器代码。
试题答案
（49）A

试题52(2013年下半年试题50)
弱类型的语言（动态类型语言）是指不需要进行变量/对象类型声明的语言。（  ）属于弱类型语言。
（50）A．Java 
B.C/C++ 
C.Python 
D.C#
试题分析
强、弱类型语言有两种划分方法。
一种是从内存上来说：允许将一块内存看做多种类型。比如直接将整型变量与字符变量相加。
另一种是从语法上来说：在变量或者对象使用前，需要声明类型的语言就是强类型语言。
根据题意对弱语言的定义：不需要进行变量/对象类型声明的语言，可知本题是从语法的角度来区分强弱类型语言。java、c/c++、c#中变量在使用前都需要声明其类型，而python则不需要。因此从语法上来说，python是弱类型语言。
试题答案
（50）C

试题53(2013年上半年试题20)
以下关于解释程序和编译程序的叙述中，正确的是（  ）。
（20）A．编译程序和解释程序都生成源程序的目标程序 
B.编译程序和解释程序都不生成源程序的目标程序 
C.编译程序生成源程序的目标程序，而解释程序则不然 
D.编译程序不生成源程序的目标程序，而解释程序反之
试题分析
 编译程序：将源程序编译成目标语言程序。解释程序：直接解释执行的源程序或者将源程序翻译成某种中间代码后再加以执行。
试题答案
（20）C

试题54(2013年上半年试题21)
以下关于传值调用与引用调用的叙述中，正确的是（  ）。
①在传值调用方式下，可以实现形参和实参间双向传递数据的效果
②在传值调用方式下，实参可以是变量，也可以是常量和表达式
③在引用调用方式下，可以实现形参和实参间双向传递数据的效果
④在引用调用方式下，实参可以是变量，也可以是常量和表达式
（21）A．①③ 
B.①④ 
C.②③ 
D.②④
试题分析
 传值调用最显著的特征就是被调用的函数内部对形参的修改不影响实参的值。引用调用是将实参的地址传递给形参，使得形参的地址就是实参的地址。
试题答案
（21）C

试题55(2013年上半年试题22)
在对高级语言源程序进行编译的过程中，为源程序中变量所分配的存储单元的地址属于（  ）。
（22）A．逻辑地址 
B.物理地址 
C.接口地址 
D.线性地址
试题分析
 在编译时产生的目标文件都是从地址0开始的，连接时将各个目标文件进行符号替换，这时会修改相应的地址，最后产生一个从地址0开始的可执行文件。在该可执行文件中的地址称为逻辑地址。
试题答案
（22）A

试题56(2013年上半年试题48)
以下关于语言L={anbn|n>=1}的叙述中，正确的是（  ）。
（48）A．可用正规式“aa*bb*”描述，但不能通过有限自动机识别 
B.可用正规式“ambm”表示，但可用有限自动机识别 
C.不能用正规式表示，但可用有限自动机识别 
D.既不能用正规式表示，也不能通过有限自动机识别
试题分析
与L语言最接近的正规式为：aa*bb*
与L语言最接近的有限自动机为：
 
但无论如何无法构造出完全等价的正规式，因为在L语言中，n的取值无论为多少，a与b的数量都相等，而aa*bb*无法保障这一点。
试题答案
（48）D

试题57(2013年上半年试题49-50)
编译过程中，对高级语言程序语名的翻译主要考虑声明语名和可执行语句。对声明语句，主要是将所需要的信息正确地填入合理组织的（  ）中；对可执行语句，则是（  ）。
（49）A．符号表 
B.栈 
C.队列 
D.树 

（50）A．翻译成机器代码并加以执行 
B.转换成语法树 
C.翻译成中间代码或目标代码 
D.转换成有限自动机
试题分析
编译程序的功能是从源代码（通常为高级语言）到能直接被计算机或虚拟机执行的目标代码（汇编语言或机器语言）的翻译过程。工作过程分为6个阶段：词法分析、语法分析、语义分析、中间代码生成、代码优化、目标代码生成。
各个阶段逻辑上可以分为前端和后端。前端主要负责解析输入的源代码，由语法分析器和语意分析器协同工作。语法分析器负责把源代码中的‘单词’找出来，语意分析器把这些分散的单词按预先定义好的语法组装成有意义的表达式、语句、函数等等。前端还负责语义的检查，例如检测参与运算的变量是否是同一类型的，简单的错误处理。最终的结果常常是一个抽象的语法树，这样后端可以在此基础上进一步优化处理。
后端编译器后端主要负责分析，优化中间代码以及生成机器代码。
试题答案
（49）A（50）C

试题58(2012年下半年试题20)
可用于编写独立程序和快速脚本的语言是（  ）。
 
（20）A．Python 
B.Prolog 
C.Java 
D.C#
试题分析
Python是一种面向对象、直译式计算机程序设计语言，它不仅可以编写独立的程序，还常被分类为“脚本语言”。
试题答案
（20）A

试题59(2012年下半年试题21)
语言L={ambn | m >= 0, n >= 1}的正规表达式是（  ）。
 
（21）A．aa*bb* 
B.a*bb* 
C.aa*b* 
D.a*b*
试题分析
由于m的值大于等于0，因此a的个数可能没有，也可能是多个，与之对应的是a*，而n的值是大于等于1的，因此至少有一个b，那么与之对应的就是bb*，所以本题答案选B。
试题答案
（21）B

试题60(2012年下半年试题22)
算术表达式(a-b)*c+d的后缀式是（  ）（-、+、*表示算术的减、加、乘运算，运算符的优先级和结合性遵循惯例）。
 
（22）A．a b c d - * + 
B.a b – c d * + 
C.a b – c * d + 
D.a b c – d * +
试题分析
 
试题答案
（22）C

试题61(2012年下半年试题48)
将高级语言源程序翻译成目标程序的是（  ）。
 
（48）A．解释程序 
B.编译程序 
C.链接程序 
D.汇编程序
试题分析
用高级语言编写的程序不能直接被机器执行，而是经过相关的处理后，将其变成目标程序后才能被机器执行，而这一过程就是一个编译的过程，而实现这个功能的程序就称为编译程序。
试题答案
（48）B

试题62(2012年下半年试题49)
在对程序语言进行翻译的过程中，常采用一些与之等价的中间代码表示形式。常用的中间代码表示不包括（  ）。
 
（49）A．树 
B.后缀式 
C.四元式 
D.正则式
试题分析
高级程序语言编写的程序要想在计算机上执行，就需要翻译，常见的翻译方式有编译和解释两种。在编译的方式下，经常用一些与之等价的中间代码表示形式，而常用的中间代码有树、后缀式、四元式。
试题答案
（49）D

试题63(2012年下半年试题50)
以下关于程序错误的叙述中，正确的是（  ）。 
（50）A．编译正确的程序必然不包含语法错误 
B.编译正确的程序必然不包含语义错误 
C.除数为0的错误可以在语义分析阶段检查出来 
D.除数为0的错误可以在语法分析阶段检查出来
试题分析
本题考查程序语言基础知识。
编译正确的程序可以消除词法及语法错误，但不能完全消除语义错误。
语义错误分两类，静态语义错误可以通过编译程序检测发现，而动态语义错误需要到运行时才能被发现。
试题答案
（50）A

试题64(2012年上半年试题20)
对于逻辑表达式“x and y or not z”，and、or、not分别是逻辑与、或、非运算，优先级从高到低为not、and、or，and、or为左结合，not为右结合，若进行短路计算，则（  ）。   
（20）A．x为真时，整个表达式的值即为真，不需要计算y和z的值 
B.x为假时，整个表达式的值即为假，不需要计算y和z的值 
C.x为真时，根据y的值决定是否需要计算z的值 
D.x为假时，根据y的值决定是否需要计算z的值
试题分析
本题主要考查逻辑与、或运算。
逻辑与运算需要考虑两个操作数的值、而逻辑或只要第一个操作数为真，那么整个计算结果即为真，这种情况下无需考虑其第二个操作数的值，因此本题的答案选C。
试题答案
（20）C

试题65(2012年上半年试题22)
算术表达式x-(y+c)*8的后缀式是（  ）（-、+、*表示算术的减、加、乘运算，运算符的优先级和结合性遵循惯例）。
（22）A．x y c 8 - + * 
B.x y - c + 8 * 
C.x y c 8 * - + 
D.x y c + 8 * -
试题分析
后缀表示也称为表达式的逆波兰表示。在这种表示方法中，将运算符号写在运算对象的后面，表达式中的运算符号按照计算次序书写。
对于表达式x-(y+c)*8，先计算y与c的和，再乘以8，最后用x减去这个这个计算，因此其后缀式为xyc+8*-。
试题答案
（22）D

试题66(2012年上半年试题39)
在有些程序设计语言中，过程调用和响应调用需执行的代码的绑定直到运行时才进行，这种绑定称为（  ）。
（39）A．静态绑定 
B.动态绑定 
C.过载绑定 
D.强制绑定
试题分析
动态绑定是指在执行期间（非编译期）判断所引用对象的实际类型，根据其实际的类型调用其相应的方法。而静态绑定是指在程序编译期就完成的绑定。
试题答案
（39）B

试题67(2012年上半年试题48)
下图所示为一个有限自动机（其中，A是初态、C是终态），该自动机所识别的字符串的特点是（  ）。
 

 
（48）A．必须以11结尾的0、1串 
B.必须以00结尾的0、1串 
C.必须以01结尾的0、1串 
D.必须以10结尾韵0、1串
试题分析
    被有限自动机所识别是指从初态开始到终态结束，所输入的字符串能够按顺序地执行下去，若到某个状态不能往下走得到下一个字符，则认为不能识别。
    在本题中，从初态A出发，不管经过多少个1和0之后，只能是处在A、B、C三种状态中的一种，所以在(0|1)*后，只能是处在A、B、C三种状态中的一种，不管是在那个状态，输入0后，都会处在状态B，然后输入1，都会转换到状态C，因此与本题有限自动机等价的正规式是(0|1)*01，即该自动机所识别的字符串的特点是必须以01结尾的0、1串。
试题答案
（48）C

试题68(2012年上半年试题50)
函数（过程）调用时，常采用传值与传地址两种方式在实参与形参间传递信息。以下叙述中，正确的是（  ）。
（50）A．在传值方式下，将形参的值传给实参，因此，形参必须是常量或变量 
B.在传值方式下，将实参的值传给形参，因此，实参必须是常量或变量 
C.在传地址方式下，将形参的地址传给实参，因此，形参必须有地址 
D.在传地址方式下，将实参的地址传给形参，因此，实参必须有地址
试题分析
形式参数就是过程定义中函数名后括号中所带的参数；实际参数是在调用点表示向被调用过程传递的数据。
在函数调用时，数据传递的方向是从实参到形参。只是采用传值传递方式时，传递的是数值，这个数值只要是确定的即可，可以是常理、变量或表达式等。而采用传址传递方式时，传递的是地址，因此实参必须有地址。
试题答案
（50）D

试题69(2012年上半年试题51)
编译和解释是实现高级程序设计语言翻译的两种基本形式。以下关于编译与解释的叙述中，正确的是（  ）。
（51）A．在解释方式下，对源程序不进行词法分析和语法分析，直接进行语义分析 
B.在解释方式下，无需进行词法、语法和语义分析，而是直接产生源程序的目标代码 
C.在编译方式下，必须进行词法、语法和语义分析，然后再产生源程序的目标代码 
D.在编译方式下，必须先形成源程序的中间代码，然后再产生与机器对应的目标代码
试题分析
    编译和解释是语言处理的两种基本方式。编译过程包括词法分析、语法分析、语义分析、中间代码生成、代码优化和目标代码生成等阶段，以及符号表管理与出错处理模块。
　　解释过程在词法、语法和语义分析方面与编译程序的工作原理基本相同，但是在运行用户程序时，它直接执行源程序或源程序的内部形式。
　　这两种语言处理程序的根本区别是：在编译方式下，机器上运行的是与源码程序等价的目标程序，源程序和编译程序都不再参与目标程序的执行过程；而在解释方式下，解释程序和源程序（或其某种等价表示）要参与到程序的运行过程中，运行程序的控制权在解释程序。
    在编译方式下，词法、语法和语义分析是必须要进行的工作，而生产中间代码和优化则是可以进行也可以不进行。
试题答案
（51）C

试题70(2011年下半年试题20)
 若C程序的表达式中引用了未赋初值的变量，则（  ）。

 
（20）A．编译时一定会报告错误信息，该程序不能运行 
B.可以通过编译并运行，但运行时一定会报告异常 
C.可以通过编译，但链接时一定会报告错误信息而不能运行 
D.可以通过编译并运行，但运行结果不一定是期望的结果
试题分析
在C程序中，若在某个表达式中引用了未赋初值的变量，那么程序是可以通过编译并运行的，因为程序中并没用语法方面的错误，只是运行的结果可能与我们期望的结果不一致。
试题答案
（20）D

试题71(2011年下半年试题28)
某程序设计语言规定在源程序中的数据都必须具有类型，然而，（  ）并不是做出此规定的理由。
 
（28）A．为数据合理分配存储单元 
B.可以定义和使用动态数据结构 
C.可以规定数据对象的取值范围及能够进行的运算 
D.对参与表达式求值的数据对象可以进行合法性检查
试题分析
要求源程序中的数据必须具有类型的目的主要有以下几个方面：
第一是方便为数据合理分配存储单元；第二是规定了数据类型，就知道了其占用的字节数，从而也就规定了数据对象的取值范围及能够进行的运算；第三是对参与表达式求值的数据对象可以进行合法性检查，比如浮点数就不能进行自加操作。
试题答案
（28）B

试题72(2011年下半年试题48)
下图所示为一个有限自动机（其中，A是初态、C是终态），该自动机识别的语言可用正规式（  ）表示。
 
 
（48）A．(0|1)*01
B.1*0*10*1
C.1*(0)*01
D.1*(0|10)*1*
试题分析
被有限自动机所识别是指从初态开始到终态结束，所输入的字符串能够按顺序地执行下去，若到某个状态不能往下走得到下一个字符，则认为不能识别。
在本题中，选项A能被识别。从初态A出发，不管经过多少个1和0之后，只能是处在A、B、C三种状态中的一种，所以在(0|1)*后，只能是处在A、B、C三种状态中的一种，不管是在那个状态，输入0后，都会处在状态B，然后输入1，都会转换到状态C，因此选项A能被该有限自动机所识别。
同样的道理，我们可以知道其它选项的正规式不能被识别。
试题答案
（48）A

试题73(2011年下半年试题49-50)
函数t、f的定义如下所示，其中，a是整型全局变量。设调用函数t前a的值为5，则在函数t中以传值调用(call by value)方式调用函数f时，输出为（  ）；在函数t中以引用调用( call by reference)方式调用函数f时，输出为（  ）。
 
（49）A．12
B.16
C.20
D.24

（50）A．12
B.16
C.20
D.24
试题分析
传值调用中，形参取的是实参的值，形参的改变不会导致调用点所传的实参的值发生改变；而引用（传址）调用中，形参取的是实参的地址，即相当于实参存储单元的地址引用，因此其值的改变同时就改变了实参的值。
在本题中，首先是采用传值调用，这个时候将变量a的值5传递给形参r，即r的值为5，那么a的值经过a=r+1后变成了6，而r的值经过r=r*2后变成了10，并返回，即在函数t中，变量x的值被赋值为10，那么在函数t中最后输出的时10+6=16。
采用引用调用时，由于形参r指向的是实参a的存储空间，即r与a指向的是同一块存储单元，首先a的值为5，经过a=r+1后变成了6，再经过r=r*2后变成了12，并返回，即在函数t中，变量x的值被赋值为12，那么在函数t中最后输出的时12+12=24。
试题答案
（49）B（50）D

试题74(2011年上半年试题20-21)
算术表达式采用逆波兰式表示时不用括号，可以利用（  ）进行求值。与逆波兰式ab-cd+*对应的中缀表达式是（  ）。
 
（20）A．数组 
B.栈 
C.队列 
D.散列表 

（21）A．a-b+c*d 
B.(a-b)*c+d 
C.(a-b)*(c+d) 
D.a-b*c+d
试题分析
逆波兰式也叫后缀表达式，即将运算符写在操作数之后的表达式，它不需使用括号，在将算术表达式转换为逆波兰式表示时，需要分配2个栈，一个作为临时存储运算符的栈S1（含一个结束符号），一个作为输入逆波兰式的栈S2（空栈）。
而逆波兰式ab-cd+*转换为中缀表达式的过程为：ab-cd+* = (ab-)*(cd+) = (a-b)*(cd+) = (a-b)*(c+d)。因此本题答案选C。
试题答案
（20）B（21）C

试题75(2011年上半年试题22)
若一种程序设计语言规定其程序中的数据必须具有类型，则有利于（  ）。
①在翻译程序的过程中为数据合理分配存储单元
②对参与表达式计算的数据对象进行检查
③定义和应用动态数据结构
④规定数据对象的取值范围及能够进行的运算
⑤对数据进行强制类型转换
 
（22）A．①②③ 
B.①②④ 
C.②④⑤ 
D.③④⑤
试题分析
    一种程序设计语言规定其程序中的数据必须具有类型，好处如下：
    （1）有利于在翻译程序的过程中为数据合理分配存储单元，因为程序设计语言为不同的数据类型规定了其所占的存储空间，如果数据类型确定，其所占的存储空间也是确定的。
    （2）有利于对参与表达式计算的数据对象进行检查，因为知道数据的数据类型，我们就可以根据类型来判断该数据是否可以参与某表达式计算，如自加、自减的操作数不允许是浮点数，这只要根据数据的类型就能判断某操作数，是否能进行自加、自减运算。
    （3）有利于规定数据对象的取值范围及能够进行的运算，根据数据类型，我们可以数据的存储空间，也同时能知道数据的表示范围，如C语言中的整型数据，它占两个字节（16位），能表示的数据范围就是-216至216-1。
    综上所述，可知本题的正确答案选B。
试题答案
（22）B

试题76(2011年上半年试题48)
以下关于高级程序设计语言翻译的叙述中，正确的是（  ）。
 
（48）A．可以先进行语法分析，再进行词法分析 
B.在语法分析阶段可以发现程序中的所有错误 
C.语义分析阶段的工作与目标机器的体系结构密切相关 
D.目标代码生成阶段的工作与目标机器的体系结构密切相关
试题分析
在对用高级程序设计语言编写的程序进行执行时，首先是将源代码翻译成目标代码，然后在连接成可执行的二进制代码。因此在翻译阶段，目标代码生成阶段的工作与目标机器的体系结构密切相关。
试题答案
（48）D

试题77(2011年上半年试题49)
下图所示为一个有限自动机（其中，A是初态、C是终态），该自动机可识别（  ）。
  
（49）A．0000 
B.1111 
C.0101 
D.1010
试题分析
    本题主要考查有限自动机。
    在本题中，A是初始状态，C是终止状态，通过选项中的字符串可以从初始状态到达终止状态，则说明该字符串能被题目中的自动机识别。也可以理解为依次输入选项中的字符串，可以在该自动机中找到相应的路径。
    对于选项A的字符串0000，在输入0后，从初始状态A转移到状态B，然后接着输入3个0，状态然后停留在B，而无法到达终态C，因此选项A不能被该自动机识别。
    同样的道理，我们可以找到字符串0101能被该自动机识别，在输入0后，状态跳转到B，输入1则由B转至C，再输入0，又由C转至B，最后输入1，由B转至终态C。
试题答案
（49）C

试题78(2011年上半年试题50)
传值与传地址是函数调用时常采用的信息传递方式，（  ）。
 
（50）A．在传值方式下，是将形参的值传给实参 
B.在传值方式下，形参可以是任意形式的表达式 
C.在传地址方式下，是将实参的地址传给形参 
D.在传地址方式下，实参可以是任意形式的表达式
试题分析
    在函数调用时，系统为形参准备空间，并把实参的值赋值到形参空间中，在调用结束后，形参空间将被释放，而实参的值保持不变，这就是传值传递方式。传值传递方式中实参与形参之间的数据传递是单向的，只能由实参传递给形参，因而即使形参的值在函数执行过程中发生了变化，也不会影响到实参值。在C语言中，当参数类型是非指针类型和非数组类型时，均采用传值方式。
    传地址方式把实参的地址赋值给形参，这样形参就可以根据地址值访问和更改实参的内容，从而实现双向传递。当参数类型是指针类型或数组类型时，均采用传地址方式。
    区别于参数传值方式和返回值传递方式，传地址方式具有以下明显的优势。
    （1）参数传值方式是主调函数与被调函数之间的单向数据传递方式，而参数的传地址方式则实现了二者之间的双向数据传递。
    （2）函数的返回值每次只能把一个数据项从被调函数传递到主调函数，而参数的传地址方式却可一次性地传递多个数据项到主调函数。
试题答案
（50）C

试题79(2010年下半年试题20)
以下关于变量和常量和叙述中，错误的是（  ）。
 
（20）A．变量的取值在程序运行过程中可以改变，常量则不行 
B.变量具有类型属性，常量则没有 
C.变量具有对应的存储单元，常量则没有 
D.可以对变量赋值，不能对常量赋值
试题分析
本题主要考查我们对常理与变量的理解。顾名思义，常理是指值一旦确定后就不能再变的量，而变量则是一个在程序执行过程中，可以根据需要修改的量，是一个可改变的量。当然不管是常理还是变量，它们都有其类型属性。
试题答案
（20）B

试题80(2010年下半年试题21)
编译程序分析源程序的阶段依次是（  ）。
（21）A．词法分析、语法分析、语义分析 
B.语法分析、词法分析、语义分析 
C.语义分析、语法分析、词法分析 
D.语义分析、词法分析、语法分析
试题分析
编译程序分析源程序的阶段依次词法分析、语法分析、语义分析。
试题答案
（21）A

试题81(2010年下半年试题22)
下图所示的有限自动机中，0是初始状态，3是终止状态，该自动机可以识别（  ）。
  
（22）A．abab 
B.aaaa 
C.bbbb 
D.abba
试题分析
本题主要考查有限自动机。
在题目中，0是初始状态，3是终止状态，通过选项中的字符串可以从初始状态到达终止状态，则说明该字符串能被题目中的自动机识别。也可以理解为依次输入选项中的字符串，可以在该自动机中找到相应的路径。
对于选项A的字符串abab，通过ab可以达到终止状态，然后输入a任然可以有路径，但再输入b时，没有路径与其对应。因此A不可被该自动机识别。同样的道理，我们可以找到字符串aaaa能被该自动机识别。
试题答案
（22）B
（23）
试题82(2010年下半年试题48)
下图所示为两个有限自动机Ml和M2 (A是初态、C是终态），（  ）。
  
（48）A．M1和M2都是确定的有限自动机 
B.M1和M2都是不确定的有限自动机 
C.M1是确定的有限自动机，M2是不确定的有限自动机 
D.M1是不确定的有限自动机， M2是确定的有限自动机
试题分析
本题主要考查确定有限自动机与非确定有限自动机的判断。
    非确定有限状态自动机与确定有限状态自动机的最大区别是它们的转移函数不同。确定有限状态自动机对每一个可能的输入只有一个状态的转移。非确定有限状态自动机对每一个可能的输入可以有多个状态转移，接受到输入时从这多个状态转移中非确定地选择一个。
在本题中给出的图M1中，我们可以看到当在状态A输入0时，它可以转移到它自己，也可以转移到状态B，所以M1是非确定的。而M2中不存在这样的情况，因此是确定的有限自动机。
试题答案
（48）D

试题83(2010年下半年试题49)
以下关于可视化程序设计的叙述中，错误的是（  ）。
（49）A．视化程序设计使开发应用程序无需编写程序代码 
B.可视化程序设计基于面向对象的思想，引入了控件和事件驱动 
C.在可视化程序设计中，构造应用程序界面就像搭积木 
D.在可视化程序设计中，采用解释方式可随时查看程序的运行效果
试题分析
可视化程序设计主要是让程序设计入员利用软件本身所提供的各种控件，像搭积木式地构造应用程序的各种界面。可视化程序设计最大的优点是设计入员可以不用编写或只需编写很少的程序代码，就能完成应用程序的设计，这样就能极大地提高设计入员的工作效率。在可视化程序设计中，可随时查看程序的运行效果.
试题答案
（49）A

试题84(2010年下半年试题50)
以下关于汇编语言的叙述中，错误的是（  ）。
（50）A．汇编语言源程序中的指令语句将被翻译成机器代码 
B.汇编程序先将源程序中的伪指令翻译成机器代码，然后再翻译指令语句 
C.汇编程序以汇编语言源程序为输入，以机器语言表示的目标程序为输出 
D.汇编语言的指令语句必须具有操作码字段，可以没有操作数字段
试题分析
面向机器的程序设计语言，使用汇编语言编写的程序，机器不能直接识别，要由一种程序将汇编语言翻译成机器语言，这种起翻译作用的程序叫汇编程序。汇编程序输入的是用汇编语言书写的源程序，输出的是用机器语言表示的目标程序。
试题答案
（50）B

试题85(2010年下半年试题64)
下面C程序段中count++语句执行的次数为（  ）。
    for(int i=1；i<=11；i*=2)
    for(intj=1；j<=i；j++)
     count++；
（64）A．15 
B.16 
C.31 
D.32
试题分析
本题中给出的是一个双重循环结构，循环体就是count++。第一层循环的循环次数为4次，分别为i=1，2，4，8的情况。而当i=1时，第二层循环循环1次；当i=2时，第二层循环2次；当i=4时，第二层循环4次；当i=8时，第二层循环8次。那么可知循环体一共执行了1+2+4+8=15次。
试题答案
（64）A

